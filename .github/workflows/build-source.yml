name: "Build GTK# 2.12"
on:
  - push
  - pull_request
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.configuration.outputs.version }}
      download-url: ${{ steps.configuration.outputs.download-url }}
    env:
      GTKSHARPVERSION: 2.12.45
      GKTSHARPTARBALLEXT: .tar.gz
      GKTSHARPTARBALLFLAGS: -xz
    steps:
      - name: Chekout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - id: configuration
        name: "Configuration"
        run: |
          echo "::set-output name=version::${{ env.GTKSHARPVERSION }}"
          echo "::set-output name=download-url::https://download.mono-project.com/sources/gtk-sharp212/gtk-sharp-${{ env.GTKSHARPVERSION }}${{ env.GKTSHARPTARBALLEXT }}"
        shell: bash
      - name: "Download / Extract GTK# Sources"
        run: |
          mkdir -p "${{ github.workspace }}/obj"
          curl -sSL "${{ steps.configuration.outputs.download-url }}" | tar ${{ env.GKTSHARPTARBALLFLAGS }} -C "${{ github.workspace }}/obj"
        shell: bash
      - name: "Build Mono GTK# Assemblies"
        run: |
          mkdir -p "${{ github.workspace }}/artifacts"
          mkdir -p "${{ github.workspace }}/artifacts/lib/mono/gtk-sharp-2.0"
          mkdir -p "${{ github.workspace }}/artifacts/doc"
          echo "::group::apt install"
          docker build -t "${{ github.repository }}:${{ env.GTKSHARPVERSION }}" \
            - < Dockerfile
          echo "::endgroup::"
          docker run --rm \
            -v "${{ github.workspace }}/artifacts:/opt" \
            -v "${{ github.workspace }}/obj/gtk-sharp-${{ env.GTKSHARPVERSION }}:/workspace/gtk-sharp-${{ env.GTKSHARPVERSION }}" \
            -v "${{ github.workspace }}/scripts:/scripts" \
            -w "/workspace/gtk-sharp-${{ env.GTKSHARPVERSION }}" \
            "${{ github.repository }}:${{ env.GTKSHARPVERSION }}" \
            sh /scripts/build-gtk-sharp.sh
        shell: bash
      - name: "Update Monodoc index"
        run: |
          [string]$MonodocIndexPath = Resolve-Path "${{ github.workspace }}/obj/gtk-sharp-${{ env.GTKSHARPVERSION }}/doc/en/index.xml"
          [xml]$MonodocIndex = Get-Content -LiteralPath $MonodocIndexPath
          $MonodocTypeXml = $MonodocIndex.SelectSingleNode("/Overview/Types")
          $MonodocTypeXml.RemoveChild($MonodocTypeXml.SelectSingleNode("Namespace[@Name=`"GtkSharp.GnomeVfsSharp`"]")) | Out-Null
          $MonodocTypeXml.RemoveChild($MonodocTypeXml.SelectSingleNode("Namespace[@Name=`"Rsvg`"]")) | Out-Null
          $MonodocIndex.Save($MonodocIndexPath)
        shell: pwsh
      - name: "Export XML Documentation files"
        run: |
          docker run --rm -v "${{ github.workspace }}/artifacts:/opt" \
            -v "${{ github.workspace }}/artifacts:/opt" \
            -v "${{ github.workspace }}/obj/gtk-sharp-${{ env.GTKSHARPVERSION }}:/workspace/gtk-sharp-${{ env.GTKSHARPVERSION }}" \
            -w "/opt/doc" \
            "${{ github.repository }}:${{ env.GTKSHARPVERSION }}" \
            mdoc export-msxdoc "/workspace/gtk-sharp-${{ env.GTKSHARPVERSION }}/doc/en"
        shell: bash
      - name: "Copy LICENSE file"
        run: |
          cp "${{ github.workspace }}/obj/gtk-sharp-${{ env.GTKSHARPVERSION }}/COPYING" "${{ github.workspace }}/artifacts/LICENSE"
        shell: bash
      - name: Upload compiled assemblies
        uses: actions/upload-artifact@v2
        with:
          name: gtk-sharp-lib
          path: |
            artifacts/lib/mono/gtk-sharp-2.0
            !artifacts/lib/mono/gtk-sharp-2.0/policy.*
      - name: Upload XML Documentation files
        uses: actions/upload-artifact@v2
        with:
          name: gtk-sharp-lib
          path: artifacts/doc/*.xml
      - name: Upload LICENSE
        uses: actions/upload-artifact@v2
        with:
          name: gtk-sharp-lib
          path: artifacts/LICENSE
